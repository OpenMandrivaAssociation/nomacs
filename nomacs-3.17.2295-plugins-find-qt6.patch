diff -up nomacs-3.17.2295/ImageLounge/plugins/cmake/Utils.cmake.omv~ nomacs-3.17.2295/ImageLounge/plugins/cmake/Utils.cmake
--- nomacs-3.17.2295/ImageLounge/plugins/cmake/Utils.cmake.omv~	2024-04-22 16:31:08.771495105 +0200
+++ nomacs-3.17.2295/ImageLounge/plugins/cmake/Utils.cmake	2024-04-22 16:31:22.587631072 +0200
@@ -6,26 +6,37 @@ endmacro(NMC_POLICY)
 macro(NMC_FINDQT)
 	set(CMAKE_AUTOMOC ON)
 	set(CMAKE_AUTORCC OFF)
-	
-	set(CMAKE_INCLUDE_CURRENT_DIR ON)
- 
- if(NOT QT_QMAKE_EXECUTABLE)
-	find_program(QT_QMAKE_EXECUTABLE NAMES "qmake" "qmake-qt5" "qmake.exe")
- endif()
- if(NOT QT_QMAKE_EXECUTABLE)
-	message(FATAL_ERROR "you have to set the path to the Qt5 qmake executable")
- endif()
- message(STATUS "QMake found: ${QT_QMAKE_EXECUTABLE}")
- 
- GET_FILENAME_COMPONENT(QT_QMAKE_PATH ${QT_QMAKE_EXECUTABLE} PATH)
- set(QT_ROOT ${QT_QMAKE_PATH}/)
- set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} ${QT_QMAKE_PATH}\\..\\lib\\cmake\\Qt5)
- find_package(Qt5 REQUIRED Widgets Network LinguistTools PrintSupport Concurrent Gui Svg)
- if (NOT Qt5_FOUND)
-		message(FATAL_ERROR "Qt5Widgets not found. Check your QT_QMAKE_EXECUTABLE path and set it to the correct location")
- endif()
- add_definitions(-DQT5)
- 
+
+	if(CMAKE_VERSION VERSION_LESS "3.7.0")
+		set(CMAKE_INCLUDE_CURRENT_DIR ON)
+	endif()
+
+	if (MSVC)
+		if(NOT QT_QMAKE_EXECUTABLE)
+		find_program(QT_QMAKE_EXECUTABLE NAMES "qmake" "qmake-qt5" "qmake.exe")
+		endif()
+		if(NOT QT_QMAKE_EXECUTABLE)
+		message(FATAL_ERROR "you have to set the path to the Qt5 qmake executable")
+		endif()
+		
+		message(STATUS "QMake found: ${QT_QMAKE_EXECUTABLE}")
+		get_filename_component(QT_QMAKE_PATH ${QT_QMAKE_EXECUTABLE} PATH)
+	 endif()
+
+	if (NOT DEFINED QT_VERSION_MAJOR)
+	   find_package(QT NAMES Qt6 Qt5 REQAUIRED COMPONENTS Core)
+	endif()
+
+	find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Widgets Network LinguistTools PrintSupport Concurrent Gui Svg)
+
+	if (NOT Qt${QT_VERSION_MAJOR}_FOUND)
+		message(FATAL_ERROR "Qt Libraries not found!")
+	endif()
+	 
+	if (MSVC)
+		find_package(Qt5 ${QT5_MIN_VERSION} REQUIRED WinExtras)
+	endif()
+	 
 endmacro(NMC_FINDQT)
 
 macro(NMC_FIND_OPENCV)
